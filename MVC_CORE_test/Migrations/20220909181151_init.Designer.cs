// <auto-generated />
using System;
using MVC_CORE_test.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_CORE_test.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220909181151_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MVC_CORE_test.Entities.MyTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateTimeFinish")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinishTime")
                        .HasColumnType("int");

                    b.Property<int?>("MyTaskId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlannedTime")
                        .HasColumnType("int");

                    b.Property<int>("StatusTask")
                        .HasColumnType("int");

                    b.Property<string>("Users")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MyTaskId");

                    b.ToTable("MyTask");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTimeRegister = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FinishTime = 0,
                            Name = "Task1",
                            PlannedTime = 0,
                            StatusTask = 0
                        },
                        new
                        {
                            Id = 2,
                            DateTimeRegister = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FinishTime = 0,
                            Name = "Task2",
                            PlannedTime = 0,
                            StatusTask = 0
                        },
                        new
                        {
                            Id = 3,
                            DateTimeRegister = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FinishTime = 0,
                            Name = "Task3",
                            PlannedTime = 0,
                            StatusTask = 0
                        },
                        new
                        {
                            Id = 4,
                            DateTimeRegister = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FinishTime = 0,
                            Name = "Task4",
                            PlannedTime = 0,
                            StatusTask = 0
                        },
                        new
                        {
                            Id = 5,
                            DateTimeRegister = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FinishTime = 0,
                            Name = "Task5",
                            PlannedTime = 0,
                            StatusTask = 0
                        },
                        new
                        {
                            Id = 6,
                            DateTimeRegister = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FinishTime = 0,
                            Name = "Task6",
                            PlannedTime = 0,
                            StatusTask = 0
                        });
                });

            modelBuilder.Entity("MVC_CORE_test.Entities.MyTask", b =>
                {
                    b.HasOne("MVC_CORE_test.Entities.MyTask", null)
                        .WithMany("MyTasks")
                        .HasForeignKey("MyTaskId");
                });

            modelBuilder.Entity("MVC_CORE_test.Entities.MyTask", b =>
                {
                    b.Navigation("MyTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
